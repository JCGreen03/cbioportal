<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.persistence.mybatis.AlterationCountsMapper">

    <select id="getSampleAlterationGeneCounts" resultType="org.cbioportal.model.AlterationCountByGene">
        SELECT 
            ENTREZ_GENE_ID AS "entrezGeneId",
            HUGO_GENE_SYMBOL AS "hugoGeneSymbol",
            COUNT(*) AS "totalCount",
            COUNT(DISTINCT(CASE_ID)) AS "numberOfAlteredCases"
        FROM
        (
            <trim  prefixOverrides="UNION ALL">
                <if test="mutationMolecularProfileCaseIdentifiers != null and !mutationMolecularProfileCaseIdentifiers.isEmpty()">
                    <include refid="mutationCounts">
                        <property name="case_type" value ="'SAMPLE_ID'"/>
                    </include>
                </if>
                <if test="cnaMolecularProfileCaseIdentifiers != null and !cnaMolecularProfileCaseIdentifiers.isEmpty()">
                    UNION ALL
                    <include refid="cnaCounts">
                        <property name="case_type" value ="'SAMPLE_ID'"/>
                    </include>
                </if>
                <if test="structuralVariantMolecularProfileCaseIdentifiers != null and !structuralVariantMolecularProfileCaseIdentifiers.isEmpty()">
                    UNION ALL
                    <include refid="structuralVariantCounts">
                        <property name="case_type" value ="'SAMPLE_ID'"/>
                    </include>
                </if>
            </trim>
        ) as JoinedTable
        <where>
            <include refid="whereGene"/>
        </where>
        GROUP BY ENTREZ_GENE_ID, HUGO_GENE_SYMBOL;
    </select>

    <select id="getPatientAlterationGeneCounts" resultType="org.cbioportal.model.AlterationCountByGene">
        SELECT
            ENTREZ_GENE_ID AS entrezGeneId,
            HUGO_GENE_SYMBOL AS hugoGeneSymbol,
            COUNT(*) AS totalCount,
            COUNT(DISTINCT(CASE_ID)) AS numberOfAlteredCases
        FROM
        (
            <trim  prefixOverrides="UNION ALL">
                <if test="mutationMolecularProfileCaseIdentifiers != null and !mutationMolecularProfileCaseIdentifiers.isEmpty()">
                    <include refid="mutationCounts">
                        <property name="case_type" value ="'PATIENT_ID'"/>
                    </include>
                </if>
                <if test="cnaMolecularProfileCaseIdentifiers != null and !cnaMolecularProfileCaseIdentifiers.isEmpty()">
                    UNION ALL
                    <include refid="cnaCounts">
                        <property name="case_type" value ="'PATIENT_ID'"/>
                    </include>
                </if>
                <if test="structuralVariantMolecularProfileCaseIdentifiers != null and !structuralVariantMolecularProfileCaseIdentifiers.isEmpty()">
                    UNION ALL
                    <include refid="structuralVariantCounts">
                        <property name="case_type" value ="'PATIENT_ID'"/>
                    </include>
                </if>
            </trim>
        ) as JoinedTable
        <where>
            <include refid="whereGene"/>
        </where>
        GROUP BY ENTREZ_GENE_ID, HUGO_GENE_SYMBOL;
    </select>

    <select id="getSampleCnaGeneCounts" resultType="org.cbioportal.model.CopyNumberCountByGene">
        SELECT
            CNA_EVENT.ENTREZ_GENE_ID AS entrezGeneId,
            GENE.HUGO_GENE_SYMBOL AS hugoGeneSymbol,
            REFERENCE_GENOME_GENE.CYTOBAND as cytoband,
            CNA_EVENT.ALTERATION AS alteration,
            COUNT(*) AS totalCount,
            COUNT(DISTINCT(SAMPLE_CNA_EVENT.SAMPLE_ID)) AS numberOfAlteredCases
        FROM CNA_EVENT
        INNER JOIN SAMPLE_CNA_EVENT ON CNA_EVENT.CNA_EVENT_ID = SAMPLE_CNA_EVENT.CNA_EVENT_ID
        <include refid="fromIncludeCustomAnnotationsCna"/>
        INNER JOIN GENETIC_PROFILE ON SAMPLE_CNA_EVENT.GENETIC_PROFILE_ID = GENETIC_PROFILE.GENETIC_PROFILE_ID
        INNER JOIN GENE ON CNA_EVENT.ENTREZ_GENE_ID = GENE.ENTREZ_GENE_ID
        INNER JOIN CANCER_STUDY ON CANCER_STUDY.CANCER_STUDY_ID = GENETIC_PROFILE.CANCER_STUDY_ID
        INNER JOIN REFERENCE_GENOME_GENE ON REFERENCE_GENOME_GENE.ENTREZ_GENE_ID = CNA_EVENT.ENTREZ_GENE_ID
        INNER JOIN SAMPLE ON SAMPLE_CNA_EVENT.SAMPLE_ID = SAMPLE.INTERNAL_ID
        AND REFERENCE_GENOME_GENE.REFERENCE_GENOME_ID = CANCER_STUDY.REFERENCE_GENOME_ID
        <where>
            <choose>
                <when test="cnaTypes.hasNone()">NULL</when>
                <when test="!cnaTypes.hasAll()">
                    CNA_EVENT.ALTERATION IN
                    <foreach item="type" collection="cnaTypes" open="("
                        separator="," close=")">
                        #{type}
                    </foreach>
                </when>
            </choose>
            <include refid="whereCustomAnnotations"/>
            <include refid="caseFilter">
                <property name="case_type" value="'SAMPLE_ID'"/>
                <property name="identifiers" value="cnaMolecularProfileCaseIdentifiers"/>
                <property name="geneticProfileIdentifier" value="GENETIC_PROFILE.GENETIC_PROFILE_ID" />
                <property name="caseStableIdentifier" value="caseUniqueIdentifier" />
            </include>
            <include refid="whereGeneCna"/>
        </where>
        GROUP BY CNA_EVENT.ENTREZ_GENE_ID, CNA_EVENT.ALTERATION, REFERENCE_GENOME_GENE.CYTOBAND, GENE.HUGO_GENE_SYMBOL
    </select>

    <select id="getPatientCnaGeneCounts" resultType="org.cbioportal.model.CopyNumberCountByGene">
        SELECT
            CNA_EVENT.ENTREZ_GENE_ID AS entrezGeneId,
            GENE.HUGO_GENE_SYMBOL AS hugoGeneSymbol,
            CNA_EVENT.ALTERATION AS alteration,
            COUNT(*) AS totalCount,
            COUNT(DISTINCT(PATIENT.INTERNAL_ID)) AS numberOfAlteredCases
        FROM cNA_EVENT
        INNER JOIN SAMPLE_CNA_EVENT ON CNA_EVENT.CNA_EVENT_ID = SAMPLE_CNA_EVENT.CNA_EVENT_ID
        <include refid="fromIncludeCustomAnnotationsCna"/>
        INNER JOIN GENETIC_PROFILE ON SAMPLE_CNA_EVENT.GENETIC_PROFILE_ID = GENETIC_PROFILE.GENETIC_PROFILE_ID
        INNER JOIN SAMPLE ON SAMPLE_CNA_EVENT.SAMPLE_ID = SAMPLE.INTERNAL_ID
        INNER JOIN PATIENT ONSAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID
        INNER JOIN GENE ON CNA_EVENT.ENTREZ_GENE_ID = GENE.ENTREZ_GENE_ID
        <where>
            <choose>
                <when test="cnaTypes.hasNone()">NULL</when>
                <when test="!cnaTypes.hasAll()">
                    CNA_EVENT.ALTERATION IN
                    <foreach item="type" collection="cnaTypes" open="("
                        separator="," close=")">
                        #{type}
                    </foreach>
                </when>
            </choose>
            <include refid="whereCustomAnnotations"/>
            <include refid="caseFilter">
                <property name="case_type" value="'PATIENT_ID'"/>
                <property name="identifiers" value="cnaMolecularProfileCaseIdentifiers"/>
                <property name="geneticProfileIdentifier" value="GENETIC_PROFILE.GENETIC_PROFILE_ID" />
                <property name="caseStableIdentifier" value="caseUniqueIdentifier" />
            </include>
            <include refid="whereGeneCna"/>
        </where>
        GROUP BY CNA_EVENT.ENTREZ_GENE_ID, CNA_EVENT.ALTERATION, GENE.HUGO_GENE_SYMBOL
    </select>
    
    <select id="getSampleStructuralVariantCounts" resultType="org.cbioportal.model.AlterationCountByStructuralVariant">
        SELECT
            GENE1.ENTREZ_GENE_ID AS gene1EntrezGeneId,
            GENE1.HUGO_GENE_SYMBOL AS gene1HugoGeneSymbol,
            GENE2.ENTREZ_GENE_ID AS gene2EntrezGeneId,
            GENE2.HUGO_GENE_SYMBOL AS gene2HugoGeneSymbol,
            COUNT(*) AS totalCount,
            COUNT(DISTINCT(SAMPLE.INTERNAL_ID)) AS numberOfAlteredCases
        FROM STRUCTURAL_VARIANT
            INNER JOIN GENETIC_PROFILE ON STRUCTURAL_VARIANT.GENETIC_PROFILE_ID = GENETIC_PROFILE.GENETIC_PROFILE_ID
            <include refid="fromIncludeCustomAnnotationsSV" />
            INNER JOIN SAMPLE ON STRUCTURAL_VARIANT.SAMPLE_ID = SAMPLE.INTERNAL_ID
            INNER JOIN PATIENT ONSAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID
            LEFT JOIN GENE AS GENE1 ON STRUCTURAL_VARIANT.SITE1_ENTREZ_GENE_ID = GENE1.ENTREZ_GENE_ID
            LEFT JOIN GENE AS GENE2 ON STRUCTURAL_VARIANT.SITE2_ENTREZ_GENE_ID = GENE2.ENTREZ_GENE_ID
        <where>
            <include refid="whereCustomAnnotations"/>
            <include refid="whereSVStatus" />
            <include refid="caseFilter">
                <property name="case_type" value="'SAMPLE_ID'"/>
                <property name="identifiers" value="structuralVariantMolecularProfileCaseIdentifiers" />
                <property name="geneticProfileIdentifier" value="GENETIC_PROFILE.STABLE_ID" />
                <property name="caseStableIdentifier" value="caseStableIdentifier" />
            </include>
        </where>
        GROUP BY GENE1.ENTREZ_GENE_ID, GENE2.ENTREZ_GENE_ID
    </select>
    
    <select id="getPatientStructuralVariantCounts" resultType="org.cbioportal.model.AlterationCountByStructuralVariant">
        SELECT
            GENE1.ENTREZ_GENE_ID AS gene1EntrezGeneId,
            GENE1.HUGO_GENE_SYMBOL AS gene1HugoGeneSymbol,
            GENE2.ENTREZ_GENE_ID AS gene2EntrezGeneId,
            GENE2.HUGO_GENE_SYMBOL AS gene2HugoGeneSymbol,
            COUNT(*) AS totalCount,
            COUNT(DISTINCT(PATIENT.INTERNAL_ID)) AS numberOfAlteredCases
        FROM STRUCTURAL_VARIANT
            INNER JOIN GENETIC_PROFILE ON STRUCTURAL_VARIANT.GENETIC_PROFILE_ID = GENETIC_PROFILE.GENETIC_PROFILE_ID
            INNER JOIN SAMPLE ON STRUCTURAL_VARIANT.SAMPLE_ID = SAMPLE.INTERNAL_ID
            INNER JOIN PATIENT ONSAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID
            INNER JOIN GENE AS GENE1 ON STRUCTURAL_VARIANT.SITE1_ENTREZ_GENE_ID = GENE1.ENTREZ_GENE_ID
            INNER JOIN GENE AS GENE2 ON STRUCTURAL_VARIANT.SITE2_ENTREZ_GENE_ID = GENE2.ENTREZ_GENE_ID
        <where>
            <include refid="whereSVStatus" />
            <include refid="caseFilter">
                <property name="case_type" value="'PATIENT_ID'"/>
                <property name="identifiers" value="structuralVariantMolecularProfileCaseIdentifiers" />
                <property name="geneticProfileIdentifier" value="GENETIC_PROFILE.STABLE_ID" />
                <property name="caseStableIdentifier" value="caseStableIdentifier" />
            </include>
        </where>
        GROUP BY GENE1.ENTREZ_GENE_ID, GENE2.ENTREZ_GENE_ID
    </select>

    <sql id="fromIncludeCustomAnnotationsMutation">
        <!--For better performance, only join in the ALTERATION_DRIVER_ANNOTATION table when we need to filter on it.-->
        <bind name="allDriverAnnotationsSelected" value="includeDriver and includeVUS and includeUnknownOncogenicity" />
        <bind name="noDriverAnnotationsSelected" value="not includeDriver and not includeVUS and not includeUnknownOncogenicity" />
        <bind name="allTierOptionsSelected" value="(selectedTiers != null and selectedTiers.hasAll()) and includeUnknownTier" />
        <bind name="noTierOptionsSelected" value="(selectedTiers == null or selectedTiers.hasNone()) and not includeUnknownTier" />
        <if test="(not allDriverAnnotationsSelected and not noDriverAnnotationsSelected) or (not allTierOptionsSelected and not noTierOptionsSelected)">
            LEFT JOIN ALTERATION_DRIVER_ANNOTATION ON
            MUTATION.MUTATION_EVENT_ID = ALTERATION_DRIVER_ANNOTATION.ALTERATION_EVENT_ID
            AND MUTATION.GENETIC_PROFILE_ID = ALTERATION_DRIVER_ANNOTATION.GENETIC_PROFILE_ID
            AND MUTATION.SAMPLE_ID = ALTERATION_DRIVER_ANNOTATION.SAMPLE_ID
        </if>
    </sql>

    <sql id="fromIncludeCustomAnnotationsCna">
        <!--For better performance, only join in the ALTERATION_DRIVER_ANNOTATION table when we need to filter on it.-->
        <bind name="allDriverAnnotationsSelected" value="includeDriver and includeVUS and includeUnknownOncogenicity" />
        <bind name="noDriverAnnotationsSelected" value="not includeDriver and not includeVUS and not includeUnknownOncogenicity" />
        <bind name="allTierOptionsSelected" value="(selectedTiers != null and selectedTiers.hasAll()) and includeUnknownTier" />
        <bind name="noTierOptionsSelected" value="(selectedTiers == null or selectedTiers.hasNone()) and not includeUnknownTier" />
        <if test="(not allDriverAnnotationsSelected and not noDriverAnnotationsSelected) or (not allTierOptionsSelected and not noTierOptionsSelected)">
            LEFT JOIN ALTERATION_DRIVER_ANNOTATION ON
            SAMPLE_CNA_EVENT.CNA_EVENT_ID = ALTERATION_DRIVER_ANNOTATION.ALTERATION_EVENT_ID
            AND SAMPLE_CNA_EVENT.GENETIC_PROFILE_ID = ALTERATION_DRIVER_ANNOTATION.GENETIC_PROFILE_ID
            AND SAMPLE_CNA_EVENT.SAMPLE_ID = ALTERATION_DRIVER_ANNOTATION.SAMPLE_ID
        </if>
    </sql>
    
    <sql id="fromIncludeCustomAnnotationsSV">
        <!--For better performance, only join in the ALTERATION_DRIVER_ANNOTATION table when we need to filter on it.-->
        <bind name="allDriverAnnotationsSelected" value="includeDriver and includeVUS and includeUnknownOncogenicity" />
        <bind name="noDriverAnnotationsSelected" value="not includeDriver and not includeVUS and not includeUnknownOncogenicity" />
        <bind name="allTierOptionsSelected" value="(selectedTiers != null and selectedTiers.hasAll()) and includeUnknownTier" />
        <bind name="noTierOptionsSelected" value="(selectedTiers == null or selectedTiers.hasNone()) and not includeUnknownTier" />
        <if test="(not allDriverAnnotationsSelected and not noDriverAnnotationsSelected) or (not allTierOptionsSelected and not noTierOptionsSelected)">
            LEFT JOIN ALTERATION_DRIVER_ANNOTATION ON
            STRUCTURAL_VARIANT.INTERNAL_ID = ALTERATION_DRIVER_ANNOTATION.ALTERATION_EVENT_ID
            AND STRUCTURAL_VARIANT.GENETIC_PROFILE_ID = ALTERATION_DRIVER_ANNOTATION.GENETIC_PROFILE_ID
            AND STRUCTURAL_VARIANT.SAMPLE_ID = ALTERATION_DRIVER_ANNOTATION.SAMPLE_ID
        </if>
    </sql>

    <!-- Row should only be returned once, also when both sv sites match -->
    <sql id="whereSite1IsNot2">
        (
            STRUCTURAL_VARIANT.SITE2_ENTREZ_GENE_ID != STRUCTURAL_VARIANT.SITE1_ENTREZ_GENE_ID
            OR
            STRUCTURAL_VARIANT.SITE1_ENTREZ_GENE_ID IS NULL
        )
    </sql>

    <sql id="whereCustomAnnotations">
        <bind name="allDriverAnnotationsSelected" value="includeDriver and includeVUS and includeUnknownOncogenicity" />
        <bind name="noDriverAnnotationsSelected" value="not includeDriver and not includeVUS and not includeUnknownOncogenicity" />
        <choose>
            <when test="not allDriverAnnotationsSelected and not noDriverAnnotationsSelected">
                <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                    <if test="includeDriver">
                        OR LOWER(DRIVER_FILTER) = 'putative_driver'
                    </if>
                    <if test="includeVUS">
                        OR LOWER(DRIVER_FILTER) = 'putative_passenger'
                    </if>
                    <if test="includeUnknownOncogenicity">
                        OR DRIVER_FILTER IS NULL
                        OR LOWER(DRIVER_FILTER) IN ('unknown', 'na', '')
                    </if>
                </trim>
            </when>
            <when test="noDriverAnnotationsSelected">
                AND NULL
            </when>
            <otherwise>
                <!--when allDriverAnnotationsSelected do not filter-->
            </otherwise>
        </choose>
        <include refid="whereIncludeTiers"/>
    </sql>
        
    <sql id="whereIncludeTiers">
        <bind name="allTierOptionsSelected" value="(selectedTiers != null and selectedTiers.hasAll()) and includeUnknownTier" />
        <bind name="noTierOptionsSelected" value="(selectedTiers == null or selectedTiers.hasNone()) and not includeUnknownTier" />
        <choose>
            <when test="not allTierOptionsSelected and not noTierOptionsSelected">
                <trim prefix="AND (" suffix=")" prefixOverrides="OR">    
                    <if test="selectedTiers != null and selectedTiers.hasValues()">
                        OR DRIVER_TIERS_FILTER IN
                        <foreach item="item" collection="selectedTiers" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="includeUnknownTier">
                        OR DRIVER_TIERS_FILTER IS NULL
                        OR LOWER(DRIVER_TIERS_FILTER) IN ('', 'na', 'unknown')
                    </if>
                </trim>
            </when>
            <when test="noTierOptionsSelected">
                AND NULL
            </when>
            <otherwise>
                <!--when allTierOptionsSelected do not filter-->
            </otherwise>
        </choose>
    </sql>
    
    <sql id="whereMutationStatus">
        <bind name="allMutationStatusSelected" value="includeGermline and includeSomatic and includeUnknownStatus" />
        <bind name="noMutationStatusSelected" value="not includeGermline and not includeSomatic and not includeUnknownStatus" />
        <choose>
            <when test="not allMutationStatusSelected and not noMutationStatusSelected">
                <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                    <if test="includeGermline">
                        OR
                        LOWER(MUTATION.MUTATION_STATUS) LIKE '%germline%'
                    </if>
                    <if test="includeSomatic">
                        OR
                        LOWER(MUTATION.MUTATION_STATUS) = 'somatic'
                    </if>
                    <if test="includeUnknownStatus">
                        OR
                        (LOWER(MUTATION.MUTATION_STATUS) != 'somatic' AND LOWER(MUTATION.MUTATION_STATUS) NOT LIKE '%germline%')
                    </if>
                </trim>
            </when>
            <when test="noMutationStatusSelected">
                AND NULL
            </when>
            <otherwise>
                <!--when allMutationStatusSelected do not filter-->
            </otherwise>
        </choose>
    </sql>

    <sql id="whereSVStatus">
        <bind name="allSVStatusSelected" value="includeGermline and includeSomatic and includeUnknownStatus" />
        <bind name="noSVStatusSelected" value="not includeGermline and not includeSomatic and not includeUnknownStatus" />
        <choose>
            <when test="not allSVStatusSelected and not noSVStatusSelected">
                <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                    <if test="includeGermline">
                        OR
                        LOWER(SV_STATUS) = 'germline'
                    </if>
                    <if test="includeSomatic">
                        OR
                        LOWER(SV_STATUS) = 'somatic'
                    </if>
                    <if test="includeUnknownStatus">
                        OR
                        LOWER(SV_STATUS) NOT IN ('germline', 'somatic')
                    </if>
                </trim>
            </when>
            <when test="noSVStatusSelected">
                AND NULL
            </when>
            <otherwise>
                <!--when allSVStatusSelected do not filter-->
            </otherwise>
        </choose>
    </sql>

    <sql id="whereGene">
        <choose>
            <when test="entrezGeneIds == null or entrezGeneIds.hasNone()">
                AND NULL
            </when>
            <when test="entrezGeneIds.hasValues()">
                AND JoinedTable.ENTREZ_GENE_ID IN
                <foreach item="entrezGeneId" collection="entrezGeneIds" open="(" separator="," close=")">
                    #{entrezGeneId}
                </foreach>
            </when>
        </choose>
    </sql>
    
    <sql id="whereGeneCna">
        <choose>
            <when test="entrezGeneIds == null or entrezGeneIds.hasNone()">
                AND NULL
            </when>
            <when test="entrezGeneIds.hasValues()">
                AND CNA_EVENT.ENTREZ_GENE_ID IN
                <foreach item="entrezGeneId" collection="entrezGeneIds" open="(" separator="," close=")">
                    #{entrezGeneId}
                </foreach>
            </when>
        </choose>
    </sql>

    <sql id="mutationCounts">
        SELECT
            <include refid="caseUniqueIdentifier" /> as CASE_ID,
	        MUTATION.ENTREZ_GENE_ID,
	        GENE.HUGO_GENE_SYMBOL,
	        MUTATION_EVENT.MUTATION_TYPE
        FROM MUTATION
        INNER JOIN MUTATION_EVENT ON MUTATION_EVENT.MUTATION_EVENT_ID = MUTATION.MUTATION_EVENT_ID
        INNER JOIN GENE ON MUTATION.ENTREZ_GENE_ID = GENE.ENTREZ_GENE_ID
        INNER JOIN GENETIC_PROFILE ON MUTATION.GENETIC_PROFILE_ID = GENETIC_PROFILE.GENETIC_PROFILE_ID
        INNER JOIN SAMPLE ON SAMPLE.INTERNAL_ID = MUTATION.SAMPLE_ID
        INNER JOIN PATIENT ONSAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID
        <include refid="fromIncludeCustomAnnotationsMutation"/>
        <where>
            <choose>
                <when test="mutationTypes.hasNone()">NULL</when>
                <when test="!mutationTypes.hasAll()">
                    LOWER(MUTATION_EVENT.MUTATION_TYPE)
                    <choose>
			            <when test="mutationTypes.inverse()">
			                NOT IN
			            </when>
			            <otherwise>
			            	IN
			            </otherwise>
			        </choose>
                    <foreach item="type" collection="mutationTypes" open="(" separator="," close=")">
                        LOWER(#{type})
                    </foreach>
                </when>
            </choose>
            <include refid="whereCustomAnnotations"/>
            <include refid="whereMutationStatus"/>
            <include refid="caseFilter">
                <property name="identifiers" value="mutationMolecularProfileCaseIdentifiers"/>
                <property name="geneticProfileIdentifier" value="GENETIC_PROFILE.GENETIC_PROFILE_ID" />
                <property name="caseStableIdentifier" value="caseUniqueIdentifier" />
            </include>
        </where>
    </sql>

    <sql id="cnaCounts">
        SELECT
            <include refid="caseUniqueIdentifier" /> as CASE_ID,
	        CNA_EVENT.ENTREZ_GENE_ID,
	        GENE.HUGO_GENE_SYMBOL,
	        CAST(CNA_EVENT.ALTERATION AS CHAR(3))
        FROM cna_event
        INNER JOIN SAMPLE_CNA_EVENT ON CNA_EVENT.CNA_EVENT_ID = SAMPLE_CNA_EVENT.CNA_EVENT_ID
        INNER JOIN GENE ON CNA_EVENT.ENTREZ_GENE_ID = GENE.ENTREZ_GENE_ID
        INNER JOIN GENETIC_PROFILE ON SAMPLE_CNA_EVENT.GENETIC_PROFILE_ID = GENETIC_PROFILE.GENETIC_PROFILE_ID
        INNER JOIN PATIENT ONPATIENT.CANCER_STUDY_ID = GENETIC_PROFILE.CANCER_STUDY_ID
        INNER JOIN SAMPLE ON SAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID AND SAMPLE.INTERNAL_ID = SAMPLE_CNA_EVENT.SAMPLE_ID
        INNER JOIN CANCER_STUDY ON CANCER_STUDY.CANCER_STUDY_ID = GENETIC_PROFILE.CANCER_STUDY_ID
        <include refid="fromIncludeCustomAnnotationsCna"/>
        <where>
            <choose>
                <when test="cnaTypes.hasNone()">NULL</when>
                <when test="!cnaTypes.hasAll()">
                    CNA_EVENT.ALTERATION IN
                    <foreach item="type" collection="cnaTypes" open="(" separator="," close=")">
                        #{type}
                    </foreach>
                </when>
            </choose>
            <include refid="whereCustomAnnotations"/>
            <include refid="caseFilter">
                <property name="identifiers" value="cnaMolecularProfileCaseIdentifiers" />
                <property name="geneticProfileIdentifier" value="GENETIC_PROFILE.GENETIC_PROFILE_ID" />
                <property name="caseStableIdentifier" value="caseUniqueIdentifier" />
            </include>
        </where>
    </sql>
    
    <sql id="structuralVariantCounts">
        SELECT 
            caseUniqueId as "CASE_ID",
            entrezGeneId as "ENTREZ_GENE_ID",
            hugoGeneSymbol as "HUGO_GENE_SYMBOL",
	        NULL as "DUMMY_COLUMN"
        FROM
            (SELECT 
                GENE.ENTREZ_GENE_ID AS "entrezGeneId",
                GENE.HUGO_GENE_SYMBOL AS "hugoGeneSymbol",
                <include refid="caseUniqueIdentifier" /> as "caseUniqueId",
                <include refid="caseStableIdentifier" /> as "caseStableId",
                GENETIC_PROFILE.GENETIC_PROFILE_ID as "geneticProfileId",
                STRUCTURAL_VARIANT.SV_STATUS as "SV_STATUS"
            FROM
                STRUCTURAL_VARIANT
            INNER JOIN GENETIC_PROFILE ON STRUCTURAL_VARIANT.GENETIC_PROFILE_ID = GENETIC_PROFILE.GENETIC_PROFILE_ID
            INNER JOIN SAMPLE ON STRUCTURAL_VARIANT.SAMPLE_ID = SAMPLE.INTERNAL_ID
            INNER JOIN PATIENT ONSAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID
            INNER JOIN GENE ON STRUCTURAL_VARIANT.SITE1_ENTREZ_GENE_ID = GENE.ENTREZ_GENE_ID
            <include refid="fromIncludeCustomAnnotationsSV"/>
            <where>
                <include refid="whereCustomAnnotations"/>
            </where>

            UNION ALL

            SELECT 
                GENE.ENTREZ_GENE_ID AS entrezGeneId,
                GENE.HUGO_GENE_SYMBOL AS hugoGeneSymbol,
                <include refid="caseUniqueIdentifier" /> as caseUniqueId,
                <include refid="caseStableIdentifier" /> as caseStableId,
                GENETIC_PROFILE.GENETIC_PROFILE_ID as geneticProfileId,
                STRUCTURAL_VARIANT.SV_STATUS as SV_STATUS
            FROM
                STRUCTURAL_VARIANT
            INNER JOIN GENETIC_PROFILE ON STRUCTURAL_VARIANT.GENETIC_PROFILE_ID = GENETIC_PROFILE.GENETIC_PROFILE_ID
            INNER JOIN SAMPLE ON STRUCTURAL_VARIANT.SAMPLE_ID = SAMPLE.INTERNAL_ID
            INNER JOIN PATIENT ONSAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID
            INNER JOIN GENE ON STRUCTURAL_VARIANT.SITE2_ENTREZ_GENE_ID = GENE.ENTREZ_GENE_ID
            <include refid="fromIncludeCustomAnnotationsSV"/>
            <where>
                <include refid="whereSite1IsNot2"/>
                <include refid="whereCustomAnnotations"/>
            </where>
            ) AS combinedResults
            <where>
                <include refid="whereSVStatus"/>
                <include refid="caseFilter">
                    <property name="identifiers" value="structuralVariantMolecularProfileCaseIdentifiers" />
                    <property name="geneticProfileIdentifier" value="geneticProfileId" />
                    <property name="caseStableIdentifier" value="caseUniqueId" />
                </include>
            </where> 
    </sql>

    <sql id="caseFilter">
        <choose>
            <when test="${identifiers} == null or ${identifiers}.isEmpty()">
                AND NULL
            </when>
            <otherwise>
                <choose>
                    <when test="@java.util.Arrays@stream(${identifiers}.{molecularProfileId}).distinct().count() == 1">
                        AND ${geneticProfileIdentifier} = #{${identifiers}[0].molecularProfileId} AND
                        <include refid="${caseStableIdentifier}" /> IN
                        <foreach item="id" collection="${identifiers}" open="(" separator="," close=")">
                            #{id.caseId}
                        </foreach>
                    </when>
                    <otherwise>
                        AND (${geneticProfileIdentifier}, <include refid="${caseStableIdentifier}" />) IN
                        <foreach item="id" collection="${identifiers}" open="(" separator="," close=")">
                            (#{id.molecularProfileId}, #{id.caseId})
                        </foreach>
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </sql>

    <sql id="caseStableIdentifier">
        <choose>
            <when test="${case_type} == 'SAMPLE_ID'">
                SAMPLE.STABLE_ID
            </when>
            <otherwise>
                PATIENT.STABLE_ID
            </otherwise>
        </choose>
    </sql>

    <sql id="caseUniqueIdentifier">
        <choose>
            <when test="${case_type} == 'SAMPLE_ID'">
                SAMPLE.INTERNAL_ID
            </when>
            <otherwise>
                PATIENT.INTERNAL_ID
            </otherwise>
        </choose>
    </sql>

    <sql id="caseStableId">
        caseStableId
    </sql>
    
    <sql id="caseUniqueId">
        caseUniqueId
    </sql>
    
    <select id="getMolecularProfileCaseInternalIdentifier" resultType="org.cbioportal.model.MolecularProfileCaseIdentifier">
        SELECT
            GENETIC_PROFILE.GENETIC_PROFILE_ID AS molecularProfileId,
            <include refid="caseUniqueIdentifier">
                <property name="case_type" value ="caseType" />
            </include> as caseId
        FROM GENETIC_PROFILE
        INNER JOIN CANCER_STUDY ON CANCER_STUDY.CANCER_STUDY_ID = GENETIC_PROFILE.CANCER_STUDY_ID
        INNER JOIN PATIENT ONPATIENT.CANCER_STUDY_ID = GENETIC_PROFILE.CANCER_STUDY_ID
        INNER JOIN SAMPLE ON SAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID
        <where>
            <include refid="caseFilter">
                <property name="identifiers" value="molecularProfileSampleIdentifiers" />
                <property name="case_type" value ="caseType" />
                <property name="geneticProfileIdentifier" value="GENETIC_PROFILE.STABLE_ID" />
                <property name="caseStableIdentifier" value="caseStableIdentifier" />
            </include>
        </where>
    </select>

</mapper>
