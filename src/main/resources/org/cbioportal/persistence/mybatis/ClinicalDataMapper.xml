<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.persistence.mybatis.ClinicalDataMapper">

    <sql id="selectSample">
        CLINICAL_SAMPLE.INTERNAL_ID AS "${prefix}internalId",
        SAMPLE.STABLE_ID AS "${prefix}sampleId",
        PATIENT.STABLE_ID AS "${prefix}patientId",
        CLINICAL_SAMPLE.ATTR_ID AS "${prefix}attrId",
        CANCER_STUDY.CANCER_STUDY_IDENTIFIER AS "${prefix}studyId"
        <if test="_parameter.containsKey('projection')">
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
                , CLINICAL_SAMPLE.ATTR_VALUE AS "${prefix}attrValue"
            </if>
            <if test="projection == 'DETAILED'">
                ,
                <include refid="org.cbioportal.persistence.mybatis.ClinicalAttributeMapper.select">
                    <property name="prefix" value="${prefix}clinicalAttribute."/>
                </include>
            </if>
        </if>
    </sql>

    <sql id="selectPatient">
        CLINICAL_PATIENT.INTERNAL_ID AS "${prefix}internalId",
        PATIENT.STABLE_ID AS "${prefix}patientId",
        CLINICAL_PATIENT.ATTR_ID AS "${prefix}attrId",
        CANCER_STUDY.CANCER_STUDY_IDENTIFIER AS "${prefix}studyId"
        <if test="_parameter.containsKey('projection')">
            <if test="projection == 'SUMMARY' || projection == 'DETAILED'">
                , CLINICAL_PATIENT.ATTR_VALUE AS "${prefix}attrValue"
            </if>
            <if test="projection == 'DETAILED'">
                ,
                <include refid="org.cbioportal.persistence.mybatis.ClinicalAttributeMapper.select">
                    <property name="prefix" value="${prefix}clinicalAttribute."/>
                </include>
            </if>
        </if>
    </sql>

    <sql id="fromSample">
        FROM CLINICAL_SAMPLE
        INNER JOIN SAMPLE ON CLINICAL_SAMPLE.INTERNAL_ID = SAMPLE.INTERNAL_ID
        INNER JOIN PATIENT ONSAMPLE.PATIENT_ID = PATIENT.INTERNAL_ID
        INNER JOIN CANCER_STUDY ON PATIENT.CANCER_STUDY_ID = CANCER_STUDY.CANCER_STUDY_ID
    </sql>

    <sql id="fromSampleAndClinicalPatient">
        <include refid="fromSample"/>
        LEFT JOIN CLINICAL_PATIENT ONCLINICAL_PATIENT.INTERNAL_ID = PATIENT.INTERNAL_ID
    </sql>

    <sql id="fromPatient">
        FROM CLINICAL_PATIENT
        INNER JOIN PATIENT ONCLINICAL_PATIENT.INTERNAL_ID = PATIENT.INTERNAL_ID
        INNER JOIN CANCER_STUDY ON PATIENT.CANCER_STUDY_ID = CANCER_STUDY.CANCER_STUDY_ID
    </sql>

    <sql id="whereSample">
        <where>
            <if test="sampleIds == null">
                CANCER_STUDY.CANCER_STUDY_IDENTIFIER = #{studyIds[0]}
            </if>
            <if test="sampleIds != null">
                <choose>
                    <when test="studyIds.stream().distinct().count() == 1">
                        CANCER_STUDY.CANCER_STUDY_IDENTIFIER = #{studyIds[0]} AND
                        SAMPLE.STABLE_ID IN
                        <foreach item="item" collection="sampleIds" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        (CANCER_STUDY.CANCER_STUDY_IDENTIFIER, SAMPLE.STABLE_ID) IN
                        <foreach index="i" collection="sampleIds" open="(" separator="," close=")">
                            (#{studyIds[${i}]}, #{sampleIds[${i}]})
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="_parameter.containsKey('attributeIds') and attributeIds != null">
                AND CLINICAL_SAMPLE.ATTR_ID IN
                <foreach item="item" collection="attributeIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <sql id="wherePatient">
        <where>
            <if test="patientIds == null">
                CANCER_STUDY.CANCER_STUDY_IDENTIFIER = #{studyIds[0]}
            </if>
            <if test="patientIds != null">
                <choose>
                    <when test="studyIds.stream().distinct().count() == 1">
                        CANCER_STUDY.CANCER_STUDY_IDENTIFIER = #{studyIds[0]} AND
                        PATIENT.STABLE_ID IN
                        <foreach item="item" collection="patientIds" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        (CANCER_STUDY.CANCER_STUDY_IDENTIFIER, PATIENT.STABLE_ID) IN
                        <foreach index="i" collection="patientIds" open="(" separator="," close=")">
                            (#{studyIds[${i}]}, #{patientIds[${i}]})
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="_parameter.containsKey('attributeIds') and attributeIds != null">
                AND CLINICAL_PATIENT.ATTR_ID IN
                <foreach item="item" collection="attributeIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="getSampleClinicalData" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectSample">
            <property name="prefix" value=""/>
        </include>
        <include refid="fromSample"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN CLINICAL_ATTRIBUTE_META ON CLINICAL_SAMPLE.ATTR_ID = CLINICAL_ATTRIBUTE_META.ATTR_ID
            AND CANCER_STUDY.CANCER_STUDY_ID = CLINICAL_ATTRIBUTE_META.CANCER_STUDY_ID
            INNER JOIN TYPE_OF_CANCER ON CANCER_STUDY.TYPE_OF_CANCER_ID = TYPE_OF_CANCER.TYPE_OF_CANCER_ID
        </if>
        <include refid="whereSample"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY "${sortBy}" ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY CLINICAL_SAMPLE.ATTR_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaSampleClinicalData" resultType="org.cbioportal.model.meta.BaseMeta">
        SELECT
        COUNT(*) AS "totalCount"
        <include refid="fromSample"/>
        <include refid="whereSample"/>
    </select>

    <select id="getPatientClinicalData" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectPatient">
            <property name="prefix" value=""/>
        </include>
        <include refid="fromPatient"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN CLINICAL_ATTRIBUTE_META ON CLINICAL_PATIENT.ATTR_ID = CLINICAL_ATTRIBUTE_META.ATTR_ID
            AND CANCER_STUDY.CANCER_STUDY_ID = CLINICAL_ATTRIBUTE_META.CANCER_STUDY_ID
            INNER JOIN TYPE_OF_CANCER ON CANCER_STUDY.TYPE_OF_CANCER_ID = TYPE_OF_CANCER.TYPE_OF_CANCER_ID
        </if>
        <include refid="wherePatient"/>
        <if test="sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY CLINICAL_PATIENT.ATTR_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>
    
    <select id="getPatientClinicalDataDetailedToSample" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectPatient">
            <property name="prefix" value=""/>
        </include>
        , SAMPLE.STABLE_ID AS "sampleId"
        <include refid="fromPatient"/>
            INNER JOIN SAMPLE ON PATIENT.INTERNAL_ID = SAMPLE.PATIENT_ID
        <if test="projection == 'DETAILED'">
            INNER JOIN CLINICAL_ATTRIBUTE_META ON CLINICAL_PATIENT.ATTR_ID = CLINICAL_ATTRIBUTE_META.ATTR_ID
            AND CANCER_STUDY.CANCER_STUDY_ID = CLINICAL_ATTRIBUTE_META.CANCER_STUDY_ID
            INNER JOIN TYPE_OF_CANCER ON CANCER_STUDY.TYPE_OF_CANCER_ID = TYPE_OF_CANCER.TYPE_OF_CANCER_ID
        </if>
        <include refid="wherePatient"/>
        <if test="_parameter.containsKey('sortBy') and sortBy != null and projection != 'ID'">
            ORDER BY ${sortBy} ${direction}
        </if>
        <if test="projection == 'ID'">
            ORDER BY CLINICAL_PATIENT.ATTR_ID ASC
        </if>
        <if test="limit != null and limit != 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="getMetaPatientClinicalData" resultType="org.cbioportal.model.meta.BaseMeta">
        SELECT
        COUNT(*) AS "totalCount"
        <include refid="fromPatient"/>
        <include refid="wherePatient"/>
    </select>

    <select id="fetchSampleClinicalDataCounts" resultType="org.cbioportal.model.ClinicalDataCount">
        SELECT count(*) as count,
        CLINICAL_SAMPLE.ATTR_ID as attributeId,
        CLINICAL_SAMPLE.ATTR_VALUE as value
        <include refid="fromSample"/>
        <include refid="whereSample"/>
        GROUP BY CLINICAL_SAMPLE.ATTR_ID, CLINICAL_SAMPLE.ATTR_VALUE
    </select>

    <select id="fetchPatientClinicalDataCounts" resultType="org.cbioportal.model.ClinicalDataCount">
        SELECT count(*) as count,
        CLINICAL_PATIENT.ATTR_ID as attributeId,
        CLINICAL_PATIENT.ATTR_VALUE as value
        <include refid="fromPatient"/>
        <if test="projection == 'DETAILED'">
            INNER JOIN SAMPLE ON PATIENT.INTERNAL_ID = SAMPLE.PATIENT_ID
        </if>
        <include refid="wherePatient"/>
        GROUP BY CLINICAL_PATIENT.ATTR_ID, CLINICAL_PATIENT.ATTR_VALUE
    </select>

    <select id="getSampleClinicalTable" resultType="org.cbioportal.model.ClinicalData">
        SELECT
        <include refid="selectSample">
            <property name="prefix" value=""/>
        </include>
        <include refid="fromSample"/>
        <include refid="whereSampleSearchAndPagination"/>
    </select>

    <select id="getSampleClinicalTableCount" resultType="Integer">
        SELECT count(DISTINCT CLINICAL_SAMPLE.INTERNAL_ID)
        <include refid="fromSample"/>
        <include refid="whereSampleSearchAndPagination"/>
    </select>
    
    <sql id="whereSampleSearchAndPagination">
        INNER JOIN (
            SELECT DISTINCT CLINICAL_SAMPLE.INTERNAL_ID
            <if test="sortBy != null">
                <if test="sortBy == 'sampleId'">
                  , SAMPLE.STABLE_ID AS SORT_BY
                </if>
                <if test="sortBy == 'patientId'">
                  , PATIENT.STABLE_ID AS SORT_BY
                </if>
                <!-- else: -->
                <if test="sortBy != 'sampleId' and sortBy != 'patientId'">
                  <!-- Mark samples without the sort attribute as NULL: -->
                  , CASE 
                        WHEN CLINICAL_SAMPLE.ATTR_ID = #{sortBy} THEN CLINICAL_SAMPLE.ATTR_VALUE
                        WHEN CLINICAL_PATIENT.ATTR_ID = #{sortBy} THEN CLINICAL_PATIENT.ATTR_VALUE
                        ELSE NULL 
                    END AS SORT_BY
                </if>
            </if>
            <include refid="fromSampleAndClinicalPatient"/>
            <include refid="whereSample"/>
            <if test="searchTerm != null and not searchTerm.isBlank()">
                AND
                CLINICAL_SAMPLE.ATTR_VALUE LIKE CONCAT('%', #{searchTerm}, '%')
            </if>
            <if test=" sortBy != null">
                <!-- Put 'NULL samples' last: -->
                <choose>
                    <when test="_databaseId == 'mysql'">
                        ORDER BY ISNULL(SORT_BY), SORT_BY ${direction}
                    </when>
                    <when test="_databaseId == 'h2'">
                        ORDER BY SORT_BY ${direction} NULLS LAST
                    </when>
                </choose>
            </if>
            
            <if test="_parameter.containsKey('limit') and limit != null and limit != 0">
                LIMIT #{limit} OFFSET #{offset}
            </if>
        ) AS sample_id_subquery
          ON CLINICAL_SAMPLE.INTERNAL_ID = sample_id_subquery.INTERNAL_ID
    </sql>
    
</mapper>
